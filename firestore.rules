rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Tenant Ledger security rules
    match /artifacts/tenantledgerio/users/{userId}/ledgerEntries/{document} {
      // Only authenticated users can access their own data
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null 
        && request.auth.uid == userId
        && isValidLedgerEntry();
      allow update: if request.auth != null 
        && request.auth.uid == userId
        && isValidLedgerEntry();
      allow delete: if request.auth != null 
        && request.auth.uid == userId
        && resource.data.userId == request.auth.uid;
    }
    
    // Helper function to validate ledger entry data
    function isValidLedgerEntry() {
      return request.resource.data.tenant is string
        && request.resource.data.tenant.size() >= 1
        && request.resource.data.tenant.size() <= 100
        && request.resource.data.amount is number
        && request.resource.data.amount > 0
        && request.resource.data.category is string
        && request.resource.data.description is string
        && request.resource.data.description.size() <= 500
        && request.resource.data.userId == request.auth.uid;
    }
    
    // Allow access to security events for monitoring (read-only)
    match /security-events/{document} {
      allow read: if request.auth != null;
      allow write: if false; // Server-side only
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}